---

# # Gathering generic facts in order to get info about interfaces and VLAN list
# - name: Gathering leaf info
  # register: nxos_facts_leaf_out
  # nxos_facts:
    # gather_subset: all
  # tags:
  # - validate
  # - postdeploy
  # - predeploy
  
# # Gathering info about VRFs
# - name: Running 'show vrf' on remote devices
  # nxos_command:
    # commands: 
      # - command: show vrf
        # output: json
  # register: nxos_vrf_leaf_out
  # tags:
  # - validate
  # - postdeploy
  # - predeploy
  
# # Gathering info about VLAN to VRF mapping
# - name: Running 'show vrf all interface' on remote devices
  # nxos_command:
    # commands: 
      # - command: show vrf all interface
        # output: json
  # register: nxos_vlan_leaf_out
  # tags:
  # - validate
  # - postdeploy
  # - predeploy
  
#  The task fails if one or more VRFs (defined in services.yml) are not found
- name: Checking for VRFs
  ignore_errors: True
  fail:
    msg: "WARNING: VRF '{{item.name}}' not found on device '{{inventory_hostname}}'"
  with_items: "{{services_params.vrfs}}"
  when: "item.name not in nxos_vrf_leaf_out.stdout.0.TABLE_vrf.ROW_vrf | map(attribute='vrf_name') | list"
  tags:
  - validate
  - postdeploy
  
#  The task fails if one or more L3 VLANs (defined in services.yml) are not found
- name: Checking for VLANs with SVIs
  ignore_errors: True
  fail:
    msg: "WARNING: Following VLAN missing in VRF '{{ item.name }}': {{ to_be_created_svi_list | difference(as_is_svi_list) | flatten | join(',') }}"
  with_items: "{{ services_params.vrfs }}"
  when:
    - item.name != "default"
    - intersect_svi_count < to_be_created_svi_count
  tags:
  - validate
  - postdeploy
  
#  The task fails if one or more L2 VLANs (defined in services.yml) are not found
- name: Checking for L2 VLANs
  ignore_errors: True
  fail:
    msg: "WARNING: Following VLAN missing in VRF '{{ item.name }}': {{ to_be_created_vlan_list | difference(as_is_vlan_list) | flatten | join(',') }}"
  with_items: "{{ services_params.vrfs }}"
  when:
    - item.name == "default"
    - intersect_vlan_count < to_be_created_vlan_count
  tags:
  - validate
  - postdeploy
  
#  The task fails if one or more VRFs (defined in services.yml) already exist
- name: Checking for VRFs
#      ignore_errors: True
  fail:
    msg: "WARNING: VRF '{{item.name}}' already exists on device '{{inventory_hostname}}'"
  with_items: "{{services_params.vrfs}}"
  when: "item.name in nxos_vrf_leaf_out.stdout.0.TABLE_vrf.ROW_vrf | map(attribute='vrf_name') | list"
  tags:
  - predeploy
  
#  The task fails if one or more L3 VLANs (defined in services.yml) already exist
- name: Checking for VLANs with SVIs
#      ignore_errors: True
  fail:
    msg: "WARNING: Following VLAN already exist in VRF '{{ item.name }}': {{ to_be_svi_list | intersect(as_is_svi_list) | flatten | join(',') }}"
  with_items: "{{ services_params.vrfs }}"
  when:
    - item.name != "default"
    - intersect_svi_count > 0
  tags:
  - predeploy
  
#  The task fails if one or more L2 VLANs (defined in services.yml) already exist
- name: Checking for L2 VLANs
#      ignore_errors: True
  fail:
    msg: "WARNING: Following VLAN already exist in VRF '{{ item.name }}': {{ to_be_vlan_list | intersect(as_is_vlan_list) | flatten | join(',') }}"
  with_items: "{{ services_params.vrfs }}"
  when:
    - item.name == "default"
    - intersect_vlan_count > 0
  tags:
  - predeploy