---
# The first Play gets the timestamp from the Ansible server and stores it into 'timestamp' variable
- name: Get timestamp
  gather_facts: yes
  hosts: localhost
  tasks:
  - set_fact:
      timestamp: "{{ ansible_date_time.iso8601 }}"
    tags:
    - basic
    - underlay
    - overlay
    - services
    - complete
    
# The second Play saves the device's runnin-config files into '{{ output_folder }}/backup' folder
- name: Config backup
  gather_facts: no
  hosts: nexus_switch
  tasks:
  - nxos_rollback:
     checkpoint_file: backup.cfg
    tags:
    - basic
    - underlay
    - overlay
    - services
    - complete
  - name: config backup on server
    nxos_config:
      backup: True
      backup_options:
        filename: "{{ inventory_hostname }}_{{ hostvars['localhost']['timestamp'] }}.cfg"
        dir_path: "{{ backup_folder }}"
    tags:
    - basic
    - underlay
    - overlay
    - services
    - complete
    
# The third Play the first config specific tasks with basic settings into the devices
- name: First Deploy Tasks
  gather_facts: no
  hosts: nexus_switch
  vars: 
    - user: "{{lookup('env','USER')}}"
    - ansible_ssh_user: admin
    - ansible_ssh_pass: admin
  tasks:
  - name: Include first_deploy tasks
    include_tasks: first_deploy.yml
    tags:
    - first_deploy
    - lab
    
  handlers:
  - name: save_config
    nxos_config:
      save_when: modified
  tags:
  - first_deploy
  - lab
    
# The fourth Play deploys the complete config file or part of it into the devices
- name: Complete Deploy
  gather_facts: no
  hosts: nexus_switch 
  vars: 
  # 'nxos_file_copy' module doesn't work with ssh keys (found an issue to be solved!) and therefore we are using simple scp scripts
   - scp_opts: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /home/{{ ansible_ssh_user }}/.ssh/{{ ansible_ssh_user }}_id_rsa"
  tasks: 
  # Deploy config through nxos_commands fails if there is any syntax error, this kind of deployment highlights any templating issue!
  - block:
     - name: disable interactive terminal
       nxos_command:
        commands: 
          - command: terminal dont-ask
       tags:
       - basic
       - underlay
       - overlay
       - services 
       - complete       
     - name: deploy basic config
       vars:
         ansible_command_timeout: 40
       nxos_config:
        src: "{{output_folder}}/config/{{inventory_hostname}}_basic.conf"
        save_when: modified
       tags:
       - basic
     - name: deploy underlay config
       vars:
         ansible_command_timeout: 40
       nxos_config:
        src: "{{output_folder}}/config/{{inventory_hostname}}_underlay.conf"
        save_when: modified
       tags:
       - underlay
     - name: deploy overlay config
       vars:
         ansible_command_timeout: 40
       nxos_config:
        src: "{{output_folder}}/config/{{inventory_hostname}}_overlay.conf"
        save_when: modified
       tags:
       - overlay
     - name: deploy service config
       vars:
         ansible_command_timeout: 40
       nxos_config:
        src: "{{output_folder}}/config/{{inventory_hostname}}_services.conf"
        save_when: modified
       tags:
       - services
     - name: deploy complete config
       vars:
         ansible_command_timeout: 40
       nxos_config:
        src: "{{output_folder}}/config/{{inventory_hostname}}_complete.conf"
        save_when: modified
       tags:
       - complete
    #if deploy fails then roll back to the last backup
    rescue:
     - name: Include rescue tasks
       include_tasks: rescue.yml
       tags:
       - basic
       - underlay
       - overlay
       - services
       - complete