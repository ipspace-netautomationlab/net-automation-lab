<!DOCTYPE html>
<html>
<head>
  <title>Ethernet interface list report</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style type="text/css"> @import url(css/bootstrap.min.css?v=1.0.1);</style>
  <style type="text/css"> @import url(css/main.css?v=1.0.1);</style>
</head>
<body>
  <div id="title">
    <h1>Ethernet interface list report for DC switching fabric{# &quot;{{inventory_hostname}}&quot; #}</h1>
  </div>
  <div class="limiter">
    <div class="container-table100">
      <div class="wrap-table100">
        <div class="table100 ver1 m-b-110">
          <div class="table100-head">
            <table>
              <thead>
                <tr class="row100 head">
				  <th class="cell100 column2">Hostname</th>
                  <th class="cell100 column2">Eth Interface Report</th>
                  <th class="cell100 column3">Loopback Interface Report</th>
				  <th class="cell100 column4">SVI Interface Report</th>
{#                   <th class="cell100 column2">State</th>
                  <th class="cell100 column3">Mode</th>
                  <th class="cell100 column4">MTU</th>
                  <th class="cell100 column5">Speed</th>
                  <th class="cell100 column6">Duplex</th> #}
                </tr>
              </thead>
            </table>
          </div>
            
          <div class="table100-body js-pscroll">
            <table>
              <tbody>
			  {% for switch in groups['nexus_switch'] %}		
                  <tr class="row100 body">
				    <td class="cell100 column1"><b>{{hostvars[switch].hostname}} </b></td>
                    <td class="cell100 column2">
					{% for iface in hostvars[switch].ansible_net_interfaces | sort %}
                    {% if hostvars[switch].ansible_net_interfaces[iface]['type'] is defined and "Ethernet" in hostvars[switch].ansible_net_interfaces[iface]['type'] %}		
					<b>Interface:</b> {{iface}} <b>State:</b> {{hostvars[switch].ansible_net_interfaces[iface]['state']}} <b>mtu:</b> {{hostvars[switch].ansible_net_interfaces[iface]['mtu']}}<b>speed:</b> {{hostvars[switch].ansible_net_interfaces[iface]['speed']}} <b>duplex:</b> {{hostvars[switch].ansible_net_interfaces[iface]['duplex']}}
				    {% if hostvars[switch].ansible_net_interfaces[iface]['ipv4'] is defined %}
					<b>Address:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].address}} <b>Mask:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].masklen}}
					{% endif %}
					<br>
					{% endif %}
                    {% endfor %}
			        </td>
                    <td class="cell100 column3">
					{% for iface in hostvars[switch].ansible_net_interfaces | sort %}
                    {% if hostvars[switch].ansible_net_interfaces[iface]['type'] is defined and "Loopback" in hostvars[switch].ansible_net_interfaces[iface]['type'] %}		
					<b>Interface:</b> {{iface}} <b>State:</b> {{hostvars[switch].ansible_net_interfaces[iface]['state']}} <b>mtu:</b> {{hostvars[switch].ansible_net_interfaces[iface]['mtu']}}
				    {% if hostvars[switch].ansible_net_interfaces[iface]['ipv4'] is defined %}
					<b>Address:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].address}} <b>Mask:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].masklen}}
					{% endif %}
					<br>
					{% endif %}
                    {% endfor %}
			        </td>
                    <td class="cell100 column4">
					{% for iface in hostvars[switch].ansible_net_interfaces | sort %}
                    {% if hostvars[switch].ansible_net_interfaces[iface]['type'] is defined and "svi" in hostvars[switch].ansible_net_interfaces[iface]['type'] %}		
					<b>Interface:</b> {{iface}} <b>State:</b> {{hostvars[switch].ansible_net_interfaces[iface]['state']}} <b>mtu:</b> {{hostvars[switch].ansible_net_interfaces[iface]['mtu']}}
				    {% if hostvars[switch].ansible_net_interfaces[iface]['ipv4'] is defined %}
					<b>Address:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].address}} <b>Mask:</b> {{hostvars[switch].ansible_net_interfaces[iface]['ipv4'].masklen}}
					{% endif %}
					<br>
					{% endif %}
                    {% endfor %}
			        </td>						
					
{# 					<td class="cell100 column2">
					{% for iface in hostvars[switch].ansible_net_interfaces | sort %}
                    {% if ansible_net_interfaces[iface]['type'] is defined and ansible_net_interfaces[iface]['type'] == "Loopback" %}		
					<b>Interface:</b> {{ansible_net_interfaces[iface]}} <b>State:</b> {{ansible_net_interfaces[iface]['state']}} <b>Mode:</b> {{ansible_net_interfaces[iface]['mode']}} <b>mtu:</b> {{ansible_net_interfaces[iface]['mtu']}}<b>speed:</b> {{ansible_net_interfaces[iface]['speed']}} <b>duplex:</b> {{ansible_net_interfaces[iface]['duplex']}}
					{% if iface.ipv4 is defined %}
					<b>State:</b> {{iface.ipv4.address}} <b>Mode:</b> {{iface.ipv4.masklen}}
					{% endif %}
					<br>
					{% endif %}
                    {% endfor %}
			        </td>
					
					
					<td class="cell100 column3">
					{% for iface in hostvars[switch].ansible_net_interfaces | sort %}
                    {% if ansible_net_interfaces[iface]['type'] is defined and ansible_net_interfaces[iface]['type'] == "svi" %}		
					<b>Interface:</b> {{ansible_net_interfaces[iface]}} <b>State:</b> {{ansible_net_interfaces[iface]['state']}} <b>Mode:</b> {{ansible_net_interfaces[iface]['mode']}} <b>mtu:</b> {{ansible_net_interfaces[iface]['mtu']}}<b>speed:</b> {{ansible_net_interfaces[iface]['speed']}} <b>duplex:</b> {{ansible_net_interfaces[iface]['duplex']}}
					{% if iface.ipv4 is defined %}
					<b>State:</b> {{iface.ipv4.address}} <b>Mode:</b> {{iface.ipv4.masklen}}
					{% endif %}
					 <br>
					{% endif %}
                    {% endfor %}
			        </td> #}
{#                     <td class="cell100 column2"></td>
					<td class="cell100 column3"></td>
					<td class="cell100 column4"></td>
					<td class="cell100 column5"></td>
					<td class="cell100 column6"></td> #}
                  </tr>
		     {% endfor %}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="footer">
  </div>
</body>
</html>